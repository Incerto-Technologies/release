receivers:
  incerto_clickhouse:
    collection_interval: 60s
    endpoint: ${env:CLICKHOUSE_ENDPOINT}
    username: ${env:CLICKHOUSE_USERNAME}
    exists:
      - name: s3_failure
        # query: "select hostname from system.blob_storage_log where event_time > now () - INTERVAL 2 Minutes and error = '' limit 1"
        query: "select hostname from system.blob_storage_log"
        includeQueryLog: false

      - name: free_disk_below_20_percent
        query: SELECT SUM(total_space) AS TotalSpace, SUM(free_space - keep_free_space) AS AvailableSpace FROM system.disks HAVING AvailableSpace < (0.2 * TotalSpace) settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: available_memory_below_90_percentile
        query: "SELECT * FROM ( SELECT (available.value / total.value) < 0.2 AS is_above_80_percent FROM ( SELECT value FROM system.asynchronous_metrics WHERE metric = 'OSMemoryTotal') AS total, ( SELECT value FROM system.asynchronous_metrics WHERE metric = 'OSMemoryAvailable') AS available) WHERE is_above_80_percent = 1 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: multiple_zookeeper_sessions
        query: SELECT event_time, CurrentMetric_ZooKeeperSession FROM system.metric_log WHERE event_time > NOW() - INTERVAL 1 MINUTE AND CurrentMetric_ZooKeeperSession > 1 settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: high_keeper_latency
        query: WITH (SELECT quantileExact(0.95)(ProfileEvent_KeeperLatency) FROM system.metric_log where event_time > now() - INTERVAL 10 days) AS quantile SELECT event_time, ProfileEvent_KeeperLatency FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_KeeperLatency > quantile settings log_queries=0,log_profile_events=0
        includeQueryLog: false
      #
      #      - name: high_keeper_storage_lock_wait
      #        query: WITH (SELECT quantileExact(0.95)(ProfileEvent_KeeperStorageLockWaitMicroseconds) FROM system.metric_log where event_time > now() - INTERVAL 3 MONTHS) AS quantile SELECT event_time, ProfileEvent_KeeperStorageLockWaitMicroseconds FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_KeeperStorageLockWaitMicroseconds > quantile settings log_queries=0,log_profile_events=0
      #        includeQueryLog: false
      #
      #      - name: high_keeper_single_request_latency
      #        query: WITH (SELECT quantileExact(0.95)(ProfileEvent_KeeperTotalElapsedMicroseconds) FROM system.metric_log where event_time > now() - INTERVAL 3 MONTHS) AS quantile SELECT event_time, ProfileEvent_KeeperTotalElapsedMicroseconds FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_KeeperTotalElapsedMicroseconds > quantile settings log_queries=0,log_profile_events=0
      #        includeQueryLog: false

      - name: zookeeper_user_exception
        query: WITH (SELECT ProfileEvent_ZooKeeperUserExceptions FROM system.metric_log WHERE event_time BETWEEN (now() - INTERVAL 2 MINUTE) AND (now() - INTERVAL 1 MINUTE) ORDER BY event_time LIMIT 1) as PreviousException SELECT event_time, ProfileEvent_ZooKeeperUserExceptions FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_ZooKeeperUserExceptions > PreviousException settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: zookeeper_hardware_exception
        query: WITH (SELECT ProfileEvent_ZooKeeperHardwareExceptions FROM system.metric_log WHERE event_time BETWEEN (now() - INTERVAL 2 MINUTE) AND (now() - INTERVAL 1 MINUTE) ORDER BY event_time LIMIT 1) as PreviousException SELECT event_time, ProfileEvent_ZooKeeperHardwareExceptions FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_ZooKeeperHardwareExceptions > PreviousException settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: zookeeper_other_exception
        query: WITH (SELECT ProfileEvent_ZooKeeperOtherExceptions FROM system.metric_log WHERE event_time BETWEEN (now() - INTERVAL 2 MINUTE) AND (now() - INTERVAL 1 MINUTE) ORDER BY event_time LIMIT 1) as PreviousException SELECT event_time, ProfileEvent_ZooKeeperOtherExceptions FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_ZooKeeperOtherExceptions > PreviousException settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: zookeeper_commits_failed
        query: WITH (SELECT ProfileEvent_KeeperCommitsFailed FROM system.metric_log WHERE event_time BETWEEN (now() - INTERVAL 2 MINUTE) AND (now() - INTERVAL 1 MINUTE) ORDER BY event_time LIMIT 1) as PreviousException SELECT event_time, ProfileEvent_KeeperCommitsFailed FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_KeeperCommitsFailed > PreviousException settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: zookeeper_metadata_cleanup_error
        query: WITH (SELECT ProfileEvent_MetadataFromKeeperBackgroundCleanupErrors FROM system.metric_log WHERE event_time BETWEEN (now() - INTERVAL 2 MINUTE) AND (now() - INTERVAL 1 MINUTE) ORDER BY event_time LIMIT 1) as PreviousException SELECT event_time, ProfileEvent_MetadataFromKeeperBackgroundCleanupErrors FROM system.metric_log WHERE event_time > now() - INTERVAL 1 MINUTE AND ProfileEvent_MetadataFromKeeperBackgroundCleanupErrors > PreviousException settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: query_throuhput_not_max
        query: "select * from (select sum(multiIf(type = '1', 1, type = '2', -1, 0)) as value from system.query_log where event_time > now() - INTERVAL 1 MINUTE) where value > 4 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: query_high_execution_time
        query: "WITH (SELECT quantileExact(0.9999)(query_duration_ms) FROM system.query_log WHERE event_time > (now() - toIntervalDay(30))) AS q SELECT event_time, query_id, query, query_duration_ms FROM system.query_log WHERE (query_duration_ms > q) AND (event_time > (now() - toIntervalMinute(10))) settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: query_high_read_bytes
        query: "WITH (SELECT quantileExact(0.9999)(read_bytes) FROM system.query_log WHERE event_time > (now() - toIntervalDay(30))) AS q SELECT event_time    , query_id, query, read_bytes FROM system.query_log WHERE (read_bytes > q) AND (event_time > (now() - toIntervalMinute(10))) settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: failed_mutation
        query: "SELECT * FROM system.mutations WHERE is_done = 0 AND latest_failed_part != '' AND ((now() - latest_fail_time) < (INTERVAL 1 MINUTE)) settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: error_in_parts
        query: "SELECT event_time, event_type, `table`, error, errorCodeToName(error) AS error_code FROM system.part_log WHERE event_time >= (NOW() - (INTERVAL 1 MINUTE)) AND error > 0 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: queries_running_10
        query: "select * from (select count(*) as value from system.processes) where value > 10 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: queries_running_20
        query: "select * from (select count(*) as value from system.processes) where value > 20 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: distributed_queries_inactive
        query: "select * from system.distributed_ddl_queue where status = '0' and query_create_time > now() - INTERVAL 10 minute settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: qps_9999
        query: "with (select quantileExact(0.9999)(ProfileEvent_Query) from system.metric_log where event_time > now() -  INTERVAL 7 DAY) as q  select  event_time,  ProfileEvent_Query from system.metric_log where ProfileEvent_Query > q and event_time > now() - INTERVAL  1  MINUTE settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: keeper_outstanding_requests
        query: "select * from system.metrics where metric = 'KeeperOutstandingRequests' settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: replication_issues
        query: "select * from system.replication_queue where last_exception_time > now() - INTERVAL 10 MINUTE settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: query_log_errors
        query: "select query_id from system.query_log where type > 2 and event_time > now() - INTERVAL 10 Minute settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: data_change_queries
        query: "SELECT query_id, query FROM system.query_log WHERE (event_time >= (now() - toIntervalMinute(10))) AND (type = 'QueryFinish') AND ((query ILIKE 'DROP%') OR (query ILIKE 'SYSTEM%') OR (query ILIKE 'ALTER%') OR (query ILIKE 'truncate%')) settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: running_queries_high
        query: "with (select quantileExact(0.9999)(CurrentMetric_Query) from system.metric_log where event_time > now() -  INTERVAL 1 MONTH) as q  select  event_time,  CurrentMetric_Query from system.metric_log where CurrentMetric_Query > q and event_time > now() - INTERVAL 1  MINUTE settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: query_time_high
        query: "with (select quantileExact(0.9999)(ProfileEvent_QueryTimeMicroseconds) from system.metric_log where event_time > now() -  INTERVAL 1 MONTH) as q  select  event_time,  ProfileEvent_QueryTimeMicroseconds from system.metric_log where ProfileEvent_QueryTimeMicroseconds >q and event_time > now() - INTERVAL 1  MINUTE settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: os_wait_high
        query: "with (select quantileExact(0.9999)(ProfileEvent_OSCPUWaitMicroseconds) from system.metric_log where event_time > now() -  INTERVAL 1 MONTH) as q  select  event_time,  ProfileEvent_OSCPUWaitMicroseconds from system.metric_log where ProfileEvent_OSCPUWaitMicroseconds > q and event_time > now() - INTERVAL 1 MINUTE settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: unreachable_host
        query: "with (select uniqExact(host_name) from system.clusters where cluster != 'default') as val1, (select uniqExact(hostName()) from clusterAllReplicas('clickhouse_cluster') settings skip_unavailable_shards = 1) as val2 select * from (select val1 == val2 as allConnected) where allConnected = 0 settings log_queries=0,log_profile_events=0"
        includeQueryLog:
          false
          #      - name: unreachable_host
          #        query: "SELECT 1 WHERE (SELECT uniqExact(host_name) FROM system.clusters WHERE cluster = 'clickhouse_cluster') != (SELECT uniqExact(hostName()) FROM clusterAllReplicas('clickhouse_cluster') SETTINGS skip_unavailable_shards = 1)"
          #        includeQueryLog: false

    select:
      - name: no_ttl
        query: "select database, table from system.tables where not create_table_query ILIKE '%TTL%' and total_rows > 1000000 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: mle
        query: "select sum(ProfileEvent_QueryMemoryLimitExceeded) count_mle from system.metric_log where event_time > now() - INTERVAL 20 Minutes and ProfileEvent_QueryMemoryLimitExceeded > 0 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: mle_query
        query: "select distinct query_kind from system.query_log where exception_code = 241 and event_time > now() - INTERVAL 10 Minutes settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: insert_exception
        query: "SELECT type, query_duration_ms, current_database, query, exception_code, exception, query_id FROM system.query_log WHERE (type = '4') AND (query_kind = 'Insert') AND (event_time > (now() - toIntervalMinute(2))) settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
      - name: too_many_parts
        query: SELECT database, `table`, count(*) as DataCount FROM system.parts WHERE active = 1 AND database != 'system' GROUP BY database, `table`, active HAVING count(*) > (SELECT IF(toInt32OrZero(value) = 0, 3000, toInt32OrZero(value)) * 0.9 FROM system.merge_tree_settings WHERE name = 'parts_to_throw_insert') ORDER BY database ASC, `table` ASC settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: query_running_since_minute
        query: "select query_id from system.processes where elapsed >= 60 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: read_only_tables
        query: "select database, table, zookeeper_path, replica_name from system.replicas where is_readonly = 1 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: clickhouse_worker_down_10_minutes
        query: "select uptime() < 600 wasDown settings log_queries=0,log_profile_events=0"
        includeQueryLog: false

      - name: count_keeper_connection
        query: SELECT count(*) as  zookeeper_connections FROM system.zookeeper_connection settings log_queries=0,log_profile_events=0
        includeQueryLog: false

      - name: duplicate_macros
        query: "SELECT data.Macro as Macro, arrayStringConcat(groupArray(HostName), ',') as Hosts FROM (SELECT hostName() as HostName, arrayStringConcat(groupArray(CONCAT(macro, ':', substitution)), ',') as Macro FROM clusterAllReplicas('clickhouse_cluster', 'system.macros') GROUP BY hostName()) as data GROUP BY data.Macro HAVING COUNT(*) > 1 settings log_queries=0,log_profile_events=0"
        includeQueryLog: false
exporters:
  otlphttp:
    endpoint: ${env:SERVICE_URL}/api/v1/alerts/generated-metrics/${env:HOST_ID}?domain=clickhouse
    metrics_endpoint: ${env:SERVICE_URL}/api/v1/alerts/generated-metrics/${env:HOST_ID}?domain=clickhouse
    encoding: json
    compression: none

  debug:
    verbosity: detailed

service:
  pipelines:
    metrics:
      receivers: [incerto_clickhouse]
      exporters: [debug, otlphttp]
